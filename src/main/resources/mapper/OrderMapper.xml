<mapper namespace="com.shop.living.dao.OrderDao">

    <!-- ✅ 주문 생성 (주문 ID 자동 생성) -->
    <insert id="createOrder" useGeneratedKeys="true" keyProperty="orderId">
        INSERT INTO orders (email) VALUES (#{email});
    </insert>
    
    <!-- ✅ 주문 상세 항목 추가 -->
    <insert id="addOrderItem">
        INSERT INTO order_items (order_id, prodcode, quantity) VALUES (#{orderId}, #{prodcode}, #{quantity});
    </insert>

    <!-- ✅ 주문 목록 조회를 위한 resultMap (order_items을 포함) -->
    <resultMap id="orderResultMap" type="com.shop.living.dto.Order">
        <id column="order_id" property="orderId"/>
        <result column="email" property="email"/>
        <result column="order_date" property="orderDate"/>
        <collection property="orderItems" ofType="com.shop.living.dto.OrderItem"
                    column="order_id" select="com.shop.living.dao.OrderDao.getOrderItemsByOrderId"/>
    </resultMap>

    <!-- ✅ 주문 목록 조회 (orders + order_items JOIN) -->
    <select id="getOrderHistory" resultMap="orderResultMap">
        SELECT 
            order_id, 
            email, 
            order_date
        FROM orders
        WHERE email = #{email}
        ORDER BY order_date DESC;
    </select>

    <!-- ✅ 특정 주문에 대한 주문 상세 항목 조회 -->
    <select id="getOrderItemsByOrderId" resultType="com.shop.living.dto.OrderItem">
        SELECT 
            item_id, 
            order_id, 
            prodcode, 
            quantity
        FROM order_items
        WHERE order_id = #{orderId};
    </select>

    <!-- ✅ 주문 취소 -->
    <delete id="cancelOrder">
        DELETE FROM orders WHERE order_id = #{orderId};
    </delete>

    <!-- ✅ 장바구니에서 구매 후 해당 상품 삭제 -->
    <delete id="removeMultipleItems">
        DELETE FROM cart WHERE email = #{email} AND prodcode IN
        <foreach item='item' collection='prodcodeList' open='(' separator=',' close=')'>
            #{item}
        </foreach>;
    </delete>

</mapper>
